##
## GSTREAM using Jetson Nano
##

# Use Gstream (NVDEC)
USE_GSTREAM:                            False

##
## Visualization
##

# Enabled result visulatization, this will 
# slow down the processing. Needs to be 
# enabled to use 'SAVE_AS_VIDEO'
VISUALIZATION_ENABLED:                  True

VISUALIZATION_FRAME_SKIP:               3

SHOW_VISUALIZATION_DETAILS:             True

##
## Image processing
##

# Step though frames by keypress
# - True next frame processed on keypress
# - False process all frames consecutively
FRAME_AUTO_PROCESS:                      True

# Limit FPS to the given number:
LIMIT_FPS_TO:                            30

# Length of buffered images for video file inputs
FRAME_SET_BUFFER_LENGTH_VIDEO:           5

# Length of buffered images for camera inputs
FRAME_SET_BUFFER_LENGTH_CAMERA:          3

# The input resolution of the camera to use
# must be larger or equal to the 'frame_config' below
# Set to (None, None, None) to use default
# Use 'v4l2-ctl --list-formats-ext' to list formats
CAMERA_INPUT_RESOLUTION:                 [1920, 1080, "MJPG"]

# Wait the given time, if the buffer is full
FRAME_SET_FULL_PAUSE_TIME:               0.1

# Save preview as video file
SAVE_AS_VIDEO:                           False

# The name of the video to store
SAVE_AS_VIDEO_PATH:                      "output.avi"

# Amount of different track colors to use
TRACK_COLOR_COUNT:                       20

# Marks the detected bees in the preview
DRAW_DETECTED_ELLIPSES:                  True

# Marks the detected group of bees in the preview
DRAW_DETECTED_GROUPS:                    False

# Whether to draw any tracking related results
DRAW_TRACKING_RESULTS:                   True

# Draw rectangle over a bee in the preview when the bee is inside of a group
DRAW_GROUP_MARKER:                       False

# Mark last detected position with a small rectangle
DRAW_RECTANGLE_OVER_LAST_POSTION:        False

# Draw the bees movement trace
DRAW_TRACK_TRACE:                        False

# Draw the predicted position as circle
DRAW_TRACK_PREDICTION:                   False

# Draw estimated acceleration of the bee (Kalman)
DRAW_ACCELERATION:                       False

# Draw estimated velocity of the bee (Kalman)
DRAW_VELOCITY:                           False

# Draw the tracks id and name
DRAW_TRACK_ID:                           True

# Draw statistics of bees entering and leaving the hive
DRAW_IN_OUT_STATS:                       True


##
## Bee Tracking
##

# Whether to enable Bee tracking
ENABLE_TRACKING:                         True

# Number of waypoints to store for each track
MAX_BEE_TRACE_LENGTH:                    20


##
## Bee Detection
##

# During the bee detection cv2.conturs/fitEllipse will be used to find
# ellipses that could be bees. Below you find find some configuration
# values which are used to decide whether a bee or or a group of bees
# was detected.
# Before contours of bees can be extracted. The image is converted to gray
# -scale and then a binary threshold is applied, to separate the bees from
# their background.

# Binary threshold value used to separate bees from their background
BINARY_THRESHOLD_VALUE:          150

# Binary threshold max-value used to separate bees from their background
BINARY_THRESHOLD_MAX:            255

# A single bee has at least an ellipse area size of:
DETECT_ELLIPSE_AREA_MIN_SIZE:    100

# A single bee has at maximum an ellipse area size of:
DETECT_ELLIPSE_AREA_MAX_SIZE:    2500

# Multiple bees have at least an ellipse area size of:
DETECT_GROUP_AREA_MIN_SIZE:      3000

# Multiple bees have at maximum an ellipse area size of:
DETECT_GROUP_AREA_MAX_SIZE:      12500


##
## Neural Network
##

# Set to True to enable the neural network
NN_ENABLE:                   True

# Neural Network model path
NN_MODEL_FOLDER:             "SavedModel"

## Image Extraction

# Enable image extraction of bee images from the video to perform neural network detections
ENABLE_IMAGE_EXTRACTION:     True

# Skip every N steps to avoid similar images beeing passed to the classification network
EXTRACT_FAME_STEP:           10

# Only pass images to that have at least a sharpness value as given below.
# Higher values corresond to a higher image sharpness
EXTRACT_MIN_SHARPNESS:       120

# Save the extracted image to evaluate the extraction process or to generate image to
# train the neural network?
SAVE_EXTRACTED_IMAGES:       False

# The folder to store the extracted images to
SAVE_EXTRACTED_IMAGES_PATH:  "images"

# Save images that passed the classification with positive results?
SAVE_DETECTION_IMAGES:       False
SAVE_DETECTION_PATH:         "Detections"

# Defines which images shall be saved
SAVE_DETECTION_TYPES:        ["varroa"]

  # Resolution for image extraction (see: SAVE_EXTRACTED_IMAGES) 
# Can be either EXT_RES_75x150 or EXT_RES_150x300
NN_EXTRACT_RESOLUTION:       "EXT_RES_75x150"

# Resolution of the images passed to the classification network
# Can be either EXT_RES_75x150 or EXT_RES_150x300
# Cannot be higher than NN_EXTRACT_RESOLUTION
NN_CLASSIFY_RESOLUTION:       "EXT_RES_75x150"

# Classification result thresholds
CLASSIFICATION_THRESHOLDS: {
        'varroa':   0.97
    }


##
## WIFI
##

# Enable or disable WiFi
WIFI_ENABLE:                              True

# SSID of the WiFi network
WIFI_SSID:                                "YourWiFiSSID"

# Password of the WiFi network
WIFI_PASSWORD:                            "YourWiFiPassword"

# WiFi interface name (e.g., wlan0, eth0)
WIFI_INTERFACE:                    "wlan0"